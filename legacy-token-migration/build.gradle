apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn", "-Xopt-in=com.okta.authfoundation.InternalAuthFoundationApi"]
    }

    testVariants.all {
        it.mergedFlavor.manifestPlaceholders = [appAuthRedirectScheme: "unitTest"]
    }

    unitTestVariants.all {
        it.mergedFlavor.manifestPlaceholders = [appAuthRedirectScheme: "unitTest"]
    }
}

dependencies {
    coreLibraryDesugaring deps.core_library_desugaring

    api deps.okta.legacy_oidc
    api project(':auth-foundation')
    api deps.kotlin.stdlib
    api deps.coroutines.core

    testImplementation deps.androidx_test.core_ktx
    testImplementation deps.junit
    testImplementation deps.kotlin.test
    testImplementation deps.mockito.core
    testImplementation deps.mockito.kotlin
    testImplementation deps.robolectric
    testImplementation deps.truth
    testImplementation project(':test-helpers')
}

if (hasProperty('mavenCentralUsername')) {
    apply plugin: "com.vanniktech.maven.publish"
    afterEvaluate {
        signing {
            useGpgCmd()
            sign configurations.archives
        }
    }
}
